name: Extract ChatGPT Conversation

on:
  issues:
    types: [labeled]

jobs:
  validate-link:
    if: contains(github.event.label.name, 'extraction') 
    runs-on: ubuntu-latest
    steps:
      - name: Check link format
        uses: actions/github-script@v6
        id: check_link
        with:
          script: |
            const issueBody = github.event.issue.body;
            const linkPattern = /^https:\/\/chatgpt\.com\/share\/\S+$/;
            const shareLink = issueBody.match(linkPattern);

            if (!shareLink) {
              core.setOutput("valid", "false");
              core.setOutput("share_link", "");
            } else {
              core.setOutput("valid", "true");
              core.setOutput("share_link", shareLink[0]);
            }

  extract-conversation:
    needs: validate-link
    if: needs.validate-link.outputs.valid == 'true'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests  # Assuming you use requests to fetch content

      - name: Extract ChatGPT conversation
        id: extract_conversation
        run: |
          SHARE_LINK="${{ needs.validate-link.outputs.share_link }}"

          # Run Python script with the share link
          python main.py --share-link "$SHARE_LINK" || echo "Extraction failed" && echo "::set-output name=failed::true"
        continue-on-error: true

      - name: Commit Markdown file
        if: steps.extract_conversation.outputs.failed != 'true'
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add collection/
          git commit -m "Add ChatGPT conversation from $SHARE_LINK"
          git push

      - name: Label issue as "done"
        if: steps.extract_conversation.outputs.failed != 'true'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: "done"
        continue-on-error: true

      - name: Label issue as "failed"
        if: steps.extract_conversation.outputs.failed == 'true'
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: "failed"

      - name: Close issue
        run: |
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
            -d '{"state": "closed"}'

  close-issue-invalid-link:
    needs: validate-link
    if: needs.validate-link.outputs.valid == 'false'
    runs-on: ubuntu-latest

    steps:
      - name: Label issue as "invalid link"
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: "invalid link"

      - name: Close issue for invalid link
        run: |
          curl -X PATCH \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.issue.number }} \
            -d '{"state": "closed"}'
